{"swagger":"2.0","info":{"description":"This is the Swagger version of the OCPI documentation when there are differences between the PDF version and the Swagger version, the PDF version is leading. The goal of these swagger files is to make it easier to implement OCPI. Copyright © 2014 – 2019 NKL. All rights reserved.","version":"2.2 DRAFT","title":"OCPI 2.2 Token CPO Interface API swagger documentation","contact":{"name":"NKL","url":"https://www.github.com/ocpi/ocpi","email":"OCPI@nklnederland.nl"},"license":{"name":"This document is made available under the Creative Commons Attribution- NoDerivatives 4.0 International Public License","url":"https://creativecommons.org/licenses/by-nd/4.0/legalcode"}},"host":"localhost","basePath":"/","tags":[{"name":"Tokens module","description":"Set of endpoints for creating and updating tokens"}],"paths":{"/cpo/2.2/tokens/{countryCode}/{partyId}/{tokenUid}":{"get":{"tags":["Tokens module"],"summary":"If the eMSP wants to check the status of a Token in the CPO system it might GET the object from the CPO system for validation purposes. The eMSP is the owner of the objects, so it would be illogical if the CPO system had a different status or was missing an object.","operationId":"getTokenUsingGET","produces":["application/json;charset=UTF-8"],"parameters":[{"name":"Authorization","in":"header","description":"Each HTTP request must add an ‘Authorization’ header.","required":true,"type":"string","x-example":"Token IpbJOXxkxOAuKR92z0nEcmVF3Qw09VG7I7d/WCg0koM="},{"name":"countryCode","in":"path","description":"countryCode","required":true,"type":"string"},{"name":"partyId","in":"path","description":"partyId","required":true,"type":"string"},{"name":"tokenUid","in":"path","description":"tokenUid","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/OcpiResponse«Token»","originalRef":"OcpiResponse«Token»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false},"put":{"tags":["Tokens module"],"summary":"New or updated Token objects are pushed from the eMSP to the CPO.","operationId":"putTokenUsingPUT","consumes":["application/json"],"produces":["application/json;charset=UTF-8"],"parameters":[{"name":"Authorization","in":"header","description":"Each HTTP request must add an ‘Authorization’ header.","required":true,"type":"string","x-example":"Token IpbJOXxkxOAuKR92z0nEcmVF3Qw09VG7I7d/WCg0koM="},{"name":"countryCode","in":"path","description":"countryCode","required":true,"type":"string"},{"name":"partyId","in":"path","description":"partyId","required":true,"type":"string"},{"in":"body","name":"payload","description":"payload","required":true,"schema":{"$ref":"#/definitions/Token","originalRef":"Token"}},{"name":"tokenUid","in":"path","description":"tokenUid","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/OcpiResponse","originalRef":"OcpiResponse"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false},"patch":{"tags":["Tokens module"],"summary":"Same as the PUT method, but only the fields/objects that have to be updated have to be present, other fields/objects that are not specified are considered unchanged.","operationId":"patchTokenUsingPATCH","consumes":["application/json"],"produces":["application/json;charset=UTF-8"],"parameters":[{"name":"Authorization","in":"header","description":"Each HTTP request must add an ‘Authorization’ header.","required":true,"type":"string","x-example":"Token IpbJOXxkxOAuKR92z0nEcmVF3Qw09VG7I7d/WCg0koM="},{"name":"countryCode","in":"path","description":"countryCode","required":true,"type":"string"},{"name":"partyId","in":"path","description":"partyId","required":true,"type":"string"},{"in":"body","name":"payload","description":"payload","required":true,"schema":{"$ref":"#/definitions/Token","originalRef":"Token"}},{"name":"tokenUid","in":"path","description":"tokenUid","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/OcpiResponse","originalRef":"OcpiResponse"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}},"deprecated":false}}},"definitions":{"DateTime":{"type":"object","title":"DateTime","description":"All timestamps are formatted as string(25) using the combined date and time format from the ISO 8601 standard. All timestamps SHALL be in UTC. The absence of the timezone designator implies a UTC timestamp. \n\nExample of how timestamps shall be formatted in OCPI, other formats/patterns are not allowed:\n```\n2015-06-29T20:39:09Z\n2015-06-29T20:39:09\n2016-12-29T17:45:09Z\n2016-12-29T17:45:09\n2018-01-01T01:08:01Z\n2018-01-01T01:08:01\n```\n"},"EnergyContract":{"type":"object","required":["supplier_name"],"properties":{"supplier_name":{"type":"string","example":"Vattenfall","description":"Name of the energy supplier for this token.","minLength":0,"maxLength":64},"contract_id":{"type":"string","example":"012345678","description":"Contract ID at the energy supplier, that belongs to the owner of this token.","minLength":0,"maxLength":64}},"title":"EnergyContract","description":"Information about a energy contract that belongs to a Token so a driver could use his/her own energy contract when charging at a Charge Point."},"OcpiResponse":{"type":"object","properties":{"data":{"type":"object","description":"Contains the actual response data object or list of objects from each request, depending on the cardinality of the response data, this is an array (card. * or +), or a single object (card. 1 or ?)"},"status_code":{"type":"integer","format":"int32","example":1000,"description":"Response code, as listed in Status Codes, indicates how the request was handled. To avoid confusion with HTTP codes, at least four digits are used."},"status_message":{"type":"string","description":"An optional status message which may help when debugging."}},"title":"OcpiResponse"},"OcpiResponse«Token»":{"type":"object","properties":{"data":{"description":"Contains the actual response data object or list of objects from each request, depending on the cardinality of the response data, this is an array (card. * or +), or a single object (card. 1 or ?)","$ref":"#/definitions/Token","originalRef":"Token"},"status_code":{"type":"integer","format":"int32","example":1000,"description":"Response code, as listed in Status Codes, indicates how the request was handled. To avoid confusion with HTTP codes, at least four digits are used."},"status_message":{"type":"string","description":"An optional status message which may help when debugging."}},"title":"OcpiResponse«Token»"},"Token":{"type":"object","required":["contract_id","issuer","last_updated","type","uid","valid","whitelist"],"properties":{"uid":{"type":"string","example":12345678905880,"description":"Case-Insensitive.\nUnique ID by which this Token can be identified.\nThis is the field used by CPO system (RFID reader on the Charge Point) to identify this token.\nCurrently, in most cases: type=RFID, this is the RFID hidden ID as read by the RFID reader, but that is not a requirement.\nIf this is a type=APP_USER Token, it will be a uniquely, by the MSP, generated ID.\nThis field is named uid instead of id to prevent confusion with: contract_id.","minLength":1,"maxLength":36},"type":{"type":"string","example":"RFID","description":"\n* APP_USER: Token ID generated by a server (or App.) to identify a user of an App.\n* OTHER: Other type of token.\n* RFID: RFID Token","enum":["APP_USER","OTHER","RFID"]},"contract_id":{"type":"string","example":"DE8ACC12E46L89","description":"Case-Insensitive.\nUniquely identifies the EV Driver contract token within the eMSP’s platform (and suboperator platforms).\nRecommended to follow the specification for eMA ID from 'eMI3 standard version V1.0' (http://emi3group.com/documents-links/) 'Part 2: business objects.'","minLength":1,"maxLength":36},"visual_number":{"type":"string","example":"DF000-2001-8999","description":"Visual readable number/identification as printed on the Token (RFID card), might be equal to the contract_id.","minLength":1,"maxLength":64},"issuer":{"type":"string","example":"TheNewMotion","description":"Issuing company, most of the times the name of the company printed on the token (RFID card), not necessarily the eMSP.","minLength":1,"maxLength":64},"group_id":{"type":"string","example":"DF000-2001-8999","description":"Case-Insensitive.\nThis ID groups a couple of tokens. This can be used to make two or more tokens work as one, so that a session can be started with one token and stopped with another, handy when a card and key-fob are given to the EV-driver.\nBeware that OCPP 1.5/1.6 only support group_ids (it is called parentId in OCPP 1.5/1.6) with a maximum length of 20.","minLength":1,"maxLength":36},"valid":{"type":"boolean","example":true,"description":"Is this Token valid"},"whitelist":{"type":"string","example":"ALWAYS","description":"\n* ALWAYS: Token always has to be whitelisted, realtime authorization is not possible/allowed. CPO shall always allow any use of this Token.\n* ALLOWED: It is allowed to whitelist the token, realtime authorization is also allowed. The CPO may choose which version of authorization to use.\n* ALLOWED_OFFLINE: In normal situations realtime authorization shall be used. But when the CPO cannot get a response from the eMSP (communication between CPO and eMSP is offline), the CPO shall allow this Token to be used.\n* NEVER: Whitelisting is forbidden, only realtime authorization is allowed. CPO shall always send a realtime authorization for any use of this Token to the eMSP.","enum":["ALWAYS","ALLOWED","ALLOWED_OFFLINE","NEVER"]},"language":{"type":"string","example":"NL","description":"Language Code ISO 639-1. This optional field indicates the Token owner’s preferred interface language. If the language is not provided or not supported then the CPO is free to choose its own language."},"default_profile_type":{"type":"string","example":"GREEN","description":"\n* CHEAP: Driver wants to use the cheapest charging profile possible.\n* FAST: Driver wants his EV charged as quickly as possible and is willing to pay a premium for this, if needed.\n* GREEN: Driver wants his EV charged which as much regenerative (green) power as possible.\n* REGULAR: Driver does not have special preferences.","enum":["CHEAP","FAST","GREEN","REGULAR"]},"energy_contract":{"description":"When the Charge Point supports using your own energy supplier/contract at a Charge Point, information about the energy supplier/contract is needed so the\nCPO knows which energy supplier to use.\nNOTE: In a lot of countries it is currently not allowed/possible to use a drivers own energy supplier/contract at a Charge Point.","$ref":"#/definitions/EnergyContract","originalRef":"EnergyContract"},"last_updated":{"example":"2015-06-29T22:39:09Z","description":"Timestamp when this Token was last updated (or created).","$ref":"#/definitions/DateTime","originalRef":"DateTime"}},"title":"Token","description":"The Token object contains the information used to authenticate and authorize an EV driver for charging."}}}